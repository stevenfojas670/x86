     1                                 %line 1+1 a12procs.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 [section .data]
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 LF equ 10
    22                                 NULL equ 0
    23                                 ESC equ 27
    24                                 
    25                                 TRUE equ 1
    26                                 FALSE equ 0
    27                                 
    28                                 SUCCESS equ 0
    29                                 NOSUCCESS equ 1
    30                                 
    31                                 STDIN equ 0
    32                                 STDOUT equ 1
    33                                 STDERR equ 2
    34                                 
    35                                 SYS_read equ 0
    36                                 SYS_write equ 1
    37                                 SYS_open equ 2
    38                                 SYS_close equ 3
    39                                 SYS_fork equ 57
    40                                 SYS_exit equ 60
    41                                 SYS_creat equ 85
    42                                 SYS_time equ 201
    43                                 
    44                                 
    45                                 
    46                                 
    47 00000000 0100000000000000       currentIndex dq 1
    48 00000008 0000000000000000       myLock dq 0
    49                                 
    50                                 
    51                                 
    52                                 
    53 00000010 202E2E2E5468726561-    msgThread1 db " ...Thread starting...", LF, NULL
    54 00000010 64207374617274696E-
    55 00000010 672E2E2E0A00       
    56                                 
    57                                 
    58                                 
    59                                 
    60                                 THREAD_MIN equ 1
    61                                 THREAD_MAX equ 8
    62                                 LIMIT_MIN equ 10
    63                                 LIMIT_MAX equ 4000000000
    64                                 
    65 00000028 55736167653A202E2F-    errUsage db "Usage: ./smithNums -t <senaryNumber> ",
    66 00000028 736D6974684E756D73-
    67 00000028 202D74203C73656E61-
    68 00000028 72794E756D6265723E-
    69 00000028 20                 
    70 0000004D 2D6C203C73656E6172-     db "-l <senaryNumber>", LF, NULL
    71 0000004D 794E756D6265723E0A-
    72 0000004D 00                 
    73 00000060 4572726F722C20696E-    errOptions db "Error, invalid command line options."
    74 00000060 76616C696420636F6D-
    75 00000060 6D616E64206C696E65-
    76 00000060 206F7074696F6E732E 
    77 00000084 0A00                    db LF, NULL
    78 00000086 4572726F722C20696E-    errLSpec db "Error, invalid limit specifier."
    79 00000086 76616C6964206C696D-
    80 00000086 697420737065636966-
    81 00000086 6965722E           
    82 000000A5 0A00                    db LF, NULL
    83 000000A7 4572726F722C20696E-    errLValue db "Error, invalid limit value."
    84 000000A7 76616C6964206C696D-
    85 000000A7 69742076616C75652E 
    86 000000C2 0A00                    db LF, NULL
    87 000000C4 4572726F722C206C69-    errLRange db "Error, limit out of range."
    88 000000C4 6D6974206F7574206F-
    89 000000C4 662072616E67652E   
    90 000000DE 0A00                    db LF, NULL
    91 000000E0 4572726F722C20696E-    errTSpec db "Error, invalid thread count specifier."
    92 000000E0 76616C696420746872-
    93 000000E0 65616420636F756E74-
    94 000000E0 207370656369666965-
    95 000000E0 722E               
    96 00000106 0A00                    db LF, NULL
    97 00000108 4572726F722C20696E-    errTValue db "Error, invalid thread count value."
    98 00000108 76616C696420746872-
    99 00000108 65616420636F756E74-
   100 00000108 2076616C75652E     
   101 0000012A 0A00                    db LF, NULL
   102 0000012C 4572726F722C207468-    errTRange db "Error, thread count out of range."
   103 0000012C 7265616420636F756E-
   104 0000012C 74206F7574206F6620-
   105 0000012C 72616E67652E       
   106 0000014D 0A00                    db LF, NULL
   107                                 
   108                                 
   109                                 
   110                                 
   111 0000014F 0600000000000000       qSix dq 6
   112 00000157 0A00000000000000       qTen dq 10
   113 0000015F 0000000000000000       tmpNum dq 0
   114                                 
   115                                 
   116                                 
   117                                 
   118                                 [section .text]
   119                                 
   120                                 
   121                                 
   122                                 
   123                                 
   124                                 
   125                                 
   126                                 
   127                                 
   128                                 
   129                                 
   130                                 
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 
   136                                 
   137                                 
   138                                 
   139                                 
   140                                 
   141                                 
   142                                 
   143                                 
   144                                 
   145                                 
   146                                 
   147                                 
   148                                 
   149                                 [global getArgs]
   150                                 getArgs:
   151                                 
   152 00000000 53                     push rbx
   153 00000001 4154                   push r12
   154 00000003 4155                   push r13
   155 00000005 4156                   push r14
   156 00000007 4157                   push r15
   157                                 
   158 00000009 4883FF01               cmp rdi, 1
   159 0000000D 0F84FE000000           je usageErr
   160                                 
   161 00000013 4883FF05               cmp rdi, 5
   162 00000017 0F82DC000000           jb clERR
   163                                 
   164 0000001D 49C7C401000000         mov r12, 1
   165 00000024 49C7C500000000         mov r13, 0
   166 0000002B 4E8B3CE6               mov r15, qword [rsi + r12 * 8]
   167 0000002F 438A042F               mov al, byte [r15 + r13]
   168 00000033 3C2D                   cmp al, "-"
   169 00000035 0F8554010000           jne threadSpecErr
   170 0000003B 49FFC5                 inc r13
   171 0000003E 438A042F               mov al, byte [r15 + r13]
   172 00000042 3C74                   cmp al, "t"
   173 00000044 0F8545010000           jne threadSpecErr
   174 0000004A 49FFC5                 inc r13
   175 0000004D 438A042F               mov al, byte [r15 + r13]
   176 00000051 3C00                   cmp al, NULL
   177 00000053 0F8536010000           jne threadSpecErr
   178                                 
   179 00000059 49FFC4                 inc r12
   180 0000005C 57                     push rdi
   181 0000005D 56                     push rsi
   182 0000005E 4A8B3CE6               mov rdi, qword [rsi + r12 * 8]
   183 00000062 4889D6                 mov rsi, rdx
   184 00000065 E845010000             call aSenary2int
   185 0000006A 5E                     pop rsi
   186 0000006B 5F                     pop rdi
   187                                 
   188 0000006C 4883F800               cmp rax, FALSE
   189 00000070 0F8404010000           je threadValueErr
   190 00000076 8B02                   mov eax, dword [rdx]
   191 00000078 83F801                 cmp eax, THREAD_MIN
   192 0000007B 0F82A5000000           jb threadRangeErr
   193 00000081 83F808                 cmp eax, THREAD_MAX
   194 00000084 0F879C000000           ja threadRangeErr
   195                                 
   196 0000008A 49C7C500000000         mov r13, 0
   197 00000091 49FFC4                 inc r12
   198 00000094 4E8B3CE6               mov r15, qword [rsi + r12 * 8]
   199 00000098 438A042F               mov al, byte [r15 + r13]
   200 0000009C 3C2D                   cmp al, "-"
   201 0000009E 0F85C1000000           jne limitSpecErr
   202 000000A4 49FFC5                 inc r13
   203 000000A7 438A042F               mov al, byte [r15 + r13]
   204 000000AB 3C6C                   cmp al, "l"
   205 000000AD 0F85B2000000           jne limitSpecErr
   206 000000B3 49FFC5                 inc r13
   207 000000B6 438A042F               mov al, byte [r15 + r13]
   208 000000BA 3C00                   cmp al, NULL
   209 000000BC 0F85A3000000           jne limitSpecErr
   210                                 
   211 000000C2 49FFC4                 inc r12
   212 000000C5 57                     push rdi
   213 000000C6 56                     push rsi
   214 000000C7 4A8B3CE6               mov rdi, qword [rsi + r12 * 8]
   215 000000CB 4889CE                 mov rsi, rcx
   216 000000CE E8DC000000             call aSenary2int
   217 000000D3 5E                     pop rsi
   218 000000D4 5F                     pop rdi
   219 000000D5 4883F800               cmp rax, FALSE
   220 000000D9 7479                   je limitValueErr
   221                                 
   222 000000DB 488B01                 mov rax, qword [rcx]
   223 000000DE 4883F80A               cmp rax, LIMIT_MIN
   224 000000E2 725B                   jb limitRangeErr
   225                                 
   226 000000E4 48BB00286BEE000000-    mov rbx, LIMIT_MAX
   227 000000E4 00                 
   228 000000EE 4839D8                 cmp rax, rbx
   229 000000F1 774C                   ja limitRangeErr
   230                                 
   231 000000F3 48C7C001000000         mov rax, TRUE
   232 000000FA E9A6000000             jmp done
   233                                 
   234                                 clERR:
   235 000000FF 48C7C7[00000000]       mov rdi, errOptions
   236 00000106 E8C4020000             call printString
   237 0000010B 48C7C000000000         mov rax, FALSE
   238 00000112 E98E000000             jmp done
   239                                 
   240                                 usageErr:
   241 00000117 48C7C7[00000000]       mov rdi, errUsage
   242 0000011E E8AC020000             call printString
   243 00000123 48C7C000000000         mov rax, FALSE
   244 0000012A EB7C                   jmp done
   245                                 
   246                                 threadRangeErr:
   247 0000012C 48C7C7[00000000]       mov rdi, errTRange
   248 00000133 E897020000             call printString
   249 00000138 48C7C000000000         mov rax, FALSE
   250 0000013F EB67                   jmp done
   251                                 
   252                                 limitRangeErr:
   253 00000141 48C7C7[00000000]       mov rdi, errLRange
   254 00000148 E882020000             call printString
   255 0000014D 48C7C000000000         mov rax, FALSE
   256 00000154 EB52                   jmp done
   257                                 
   258                                 limitValueErr:
   259 00000156 48C7C7[00000000]       mov rdi, errLValue
   260 0000015D E86D020000             call printString
   261 00000162 48C7C000000000         mov rax, FALSE
   262 00000169 EB3D                   jmp done
   263                                 
   264                                 limitSpecErr:
   265 0000016B 48C7C7[00000000]       mov rdi, errLSpec
   266 00000172 E858020000             call printString
   267 00000177 48C7C000000000         mov rax, FALSE
   268 0000017E EB28                   jmp done
   269                                 
   270                                 threadValueErr:
   271 00000180 48C7C7[00000000]       mov rdi, errTValue
   272 00000187 E843020000             call printString
   273 0000018C 48C7C000000000         mov rax, FALSE
   274 00000193 EB13                   jmp done
   275                                 
   276                                 threadSpecErr:
   277 00000195 48C7C7[00000000]       mov rdi, errTSpec
   278 0000019C E82E020000             call printString
   279 000001A1 48C7C000000000         mov rax, FALSE
   280 000001A8 EBFE                   jmp done
   281                                 
   282                                 done:
   283 000001AA 415F                   pop r15
   284 000001AC 415E                   pop r14
   285 000001AE 415D                   pop r13
   286 000001B0 415C                   pop r12
   287 000001B2 5B                     pop rbx
   288                                 
   289 000001B3 C3                     ret
   290                                 
   291                                 
   292                                 
   293                                 
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 
   300                                 
   301                                 [global aSenary2int]
   302                                 aSenary2int:
   303                                 
   304 000001B4 53                     push rbx
   305 000001B5 4153                   push r11
   306 000001B7 4154                   push r12
   307 000001B9 4155                   push r13
   308 000001BB 4156                   push r14
   309                                 
   310 000001BD 49C7C300000000         mov r11, 0
   311                                 countPos:
   312 000001C4 428A041F               mov al, byte [rdi + r11]
   313 000001C8 49FFC3                 inc r11
   314 000001CB 3C00                   cmp al, NULL
   315 000001CD 75F3                   jne countPos
   316 000001CF 49FFCB                 dec r11
   317                                 
   318 000001D2 49C7C400000000         mov r12, 0
   319 000001D9 4D89DD                 mov r13, r11
   320 000001DC 49FFCD                 dec r13
   321 000001DF 48C7C306000000         mov rbx, 6
   322 000001E6 49C7C600000000         mov r14, 0
   323                                 
   324                                 toDigit:
   325 000001ED 4A0FB60427             movzx rax, byte [rdi + r12]
   326                                 
   327 000001F2 3C30                   cmp al, "0"
   328 000001F4 7252                   jb valueErr
   329                                 
   330 000001F6 3C39                   cmp al, "9"
   331 000001F8 774E                   ja valueErr
   332                                 
   333 000001FA 2C30                   sub al, 48
   334                                 
   335 000001FC 4983FD00               cmp r13, 0
   336 00000200 7500                   jne exp
   337 00000202 EB09                   jmp continue
   338                                 
   339                                 exp:
   340 00000204 F7E3                   mul ebx
   341 00000206 49FFCD                 dec r13
   342 00000209 4983FD00               cmp r13, 0
   343 0000020D 75F3                   jne exp
   344                                 
   345                                 continue:
   346 0000020F 4901C6                 add r14, rax
   347                                 
   348 00000212 49FFC4                 inc r12
   349 00000215 49FFCB                 dec r11
   350 00000218 4D89DD                 mov r13, r11
   351 0000021B 49FFCD                 dec r13
   352 0000021E 4983FB00               cmp r11, 0
   353 00000222 75C7                   jne toDigit
   354                                 
   355 00000224 4983FE00               cmp r14, 0
   356 00000228 761E                   jbe valueErr
   357                                 
   358 0000022A 4983FE0A               cmp r14, 10
   359 0000022E 7200                   jb returnDword
   360 00000230 EB0A                   jmp returnQword
   361                                 
   362                                 returnDword:
   363 00000232 448936                 mov dword [rsi], r14d
   364 00000235 48C7C001000000         mov rax, TRUE
   365 0000023C EB13                   jmp done2
   366                                 
   367                                 returnQword:
   368 0000023E 4C8936                 mov qword [rsi], r14
   369 00000241 48C7C001000000         mov rax, TRUE
   370 00000248 EB07                   jmp done2
   371                                 
   372                                 valueErr:
   373 0000024A 48C7C000000000         mov rax, FALSE
   374 00000251 EBFE                   jmp done2
   375                                 
   376                                 done2:
   377 00000253 415E                   pop r14
   378 00000255 415D                   pop r13
   379 00000257 415C                   pop r12
   380 00000259 415B                   pop r11
   381 0000025B 5B                     pop rbx
   382                                 
   383 0000025C C3                     ret
   384                                 
   385                                 
   386                                 
   387                                 
   388                                 
   389                                 
   390                                 
   391                                 
   392                                 
   393                                 
   394                                 
   395                                 
   396                                 
   397                                 
   398                                 
   399                                 [common userLimit 1:8]
   400                                 [common smithNumberCount 1:8]
   401                                 
   402                                 [global findSmithNumberCount]
   403                                 findSmithNumberCount:
   404                                 
   405                                 
   406                                 
   407                                 
   408                                 
   409                                 
   410                                 
   411                                 
   412                                 
   413 0000025D 53                     push rbx
   414 0000025E 4154                   push r12
   415 00000260 4155                   push r13
   416                                 
   417 00000262 4C8B2C25[00000000]     mov r13, qword [userLimit]
   418                                 
   419 0000026A 48C7C7[00000000]       mov rdi, msgThread1
   420 00000271 E859010000             call printString
   421                                 
   422                                 SNLOOP:
   423 00000276 E82E010000             call spinLock
   424 0000027B 488B1C25[00000000]     mov rbx, qword [currentIndex]
   425 00000283 48FF0425[00000000]     inc qword [currentIndex]
   426 0000028B E82F010000             call spinUnlock
   427                                 
   428 00000290 4C392C25[00000000]     cmp qword [currentIndex], r13
   429 00000298 7600                   jbe SNLOOPBODY
   430 0000029A EB2F                   jmp SNLOOPEND
   431                                 
   432                                 SNLOOPBODY:
   433 0000029C 4889DF                 mov rdi, rbx
   434 0000029F E82A000000             call isPrime
   435 000002A4 4883F801               cmp rax, TRUE
   436 000002A8 741F                   je notSN
   437                                 
   438 000002AA 4889DF                 mov rdi, rbx
   439 000002AD E88F000000             call findSumPrimeFactors
   440 000002B2 4989C4                 mov r12, rax
   441                                 
   442 000002B5 4889DF                 mov rdi, rbx
   443 000002B8 E857000000             call findSumOfDigits
   444 000002BD 4C39E0                 cmp rax, r12
   445 000002C0 7507                   jne notSN
   446                                 
   447 000002C2 F048FF0425[00000000]     lock inc qword [smithNumberCount]
   448                                 
   449                                 notSN:
   450 000002CB EBA7                   jmp SNLOOP
   451                                 
   452                                 SNLOOPEND:
   453 000002CD 415D                   pop r13
   454 000002CF 415C                   pop r12
   455 000002D1 5B                     pop rbx
   456                                 
   457 000002D2 C3                     ret
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 
   463                                 
   464                                 
   465                                 
   466                                 
   467                                 
   468                                 
   469                                 
   470                                 
   471                                 
   472                                 
   473                                 
   474                                 
   475                                 
   476                                 
   477                                 
   478                                 [global isPrime]
   479                                 isPrime:
   480                                 
   481 000002D3 53                     push rbx
   482 000002D4 4154                   push r12
   483 000002D6 4155                   push r13
   484                                 
   485 000002D8 4883FF01               cmp rdi, 1
   486 000002DC 762C                   jbe returnFalse
   487                                 
   488                                 
   489 000002DE 49C7C402000000         mov r12, 2
   490 000002E5 4989FD                 mov r13, rdi
   491 000002E8 49D1ED                 shr r13, 1
   492                                 
   493                                 isPrimeLoop:
   494 000002EB 4D39EC                 cmp r12, r13
   495 000002EE 7711                   ja returnTrue
   496 000002F0 4889F8                 mov rax, rdi
   497 000002F3 4899                   cqo
   498 000002F5 41F7F4                 div r12d
   499 000002F8 49FFC4                 inc r12
   500 000002FB 4883FA00               cmp rdx, 0
   501 000002FF 7409                   je returnFalse
   502 00000301 EBE6                   jmp isPrimeLoop
   503                                 
   504                                 returnTrue:
   505 00000303 48C7C001000000         mov rax, TRUE
   506 0000030A EB05                   jmp isPrimeComplete
   507                                 
   508                                 returnFalse:
   509 0000030C 48C7C000000000         mov rax, FALSE
   510                                 
   511                                 isPrimeComplete:
   512 00000313 415D                   pop r13
   513 00000315 415C                   pop r12
   514 00000317 5B                     pop rbx
   515                                 
   516 00000318 C3                     ret
   517                                 
   518                                 
   519                                 
   520                                 
   521                                 
   522                                 
   523                                 
   524                                 
   525                                 
   526                                 
   527                                 
   528                                 
   529                                 
   530                                 
   531                                 
   532                                 
   533                                 
   534                                 
   535                                 [global findSumOfDigits]
   536                                 findSumOfDigits:
   537                                 
   538 00000319 53                     push rbx
   539 0000031A 4154                   push r12
   540                                 
   541 0000031C 49C7C400000000         mov r12, 0
   542                                 
   543                                 sumWhileLoop:
   544 00000323 4883FF00               cmp rdi, 0
   545 00000327 7700                   ja calculateSum
   546 00000329 EB12                   jmp sumCalculated
   547                                 calculateSum:
   548 0000032B 4889F8                 mov rax, rdi
   549 0000032E 4899                   cqo
   550 00000330 F73425[00000000]       div dword [qTen]
   551 00000337 4901D4                 add r12, rdx
   552 0000033A 4889C7                 mov rdi, rax
   553 0000033D EBE2                   jmp sumWhileLoop
   554                                 sumCalculated:
   555 0000033F 4C89E0                 mov rax, r12
   556                                 
   557 00000342 415C                   pop r12
   558 00000344 5B                     pop rbx
   559                                 
   560 00000345 C3                     ret
   561                                 
   562                                 
   563                                 
   564                                 
   565                                 
   566                                 
   567                                 
   568                                 
   569                                 
   570                                 
   571                                 
   572                                 
   573                                 
   574                                 
   575                                 
   576                                 
   577                                 
   578                                 
   579                                 
   580                                 
   581                                 
   582                                 
   583                                 
   584                                 
   585                                 
   586                                 [global findSumPrimeFactors]
   587                                 findSumPrimeFactors:
   588 00000346 53                      push rbx
   589 00000347 4154                    push r12
   590 00000349 4155                    push r13
   591                                 
   592 0000034B 4889FB                  mov rbx, rdi
   593 0000034E 49C7C402000000          mov r12, 2
   594 00000355 49C7C500000000          mov r13, 0
   595                                 
   596                                 
   597                                 primeFactorsLoop:
   598 0000035C 4883FB01                cmp rbx, 1
   599 00000360 7E41                    jle primeFactorsDone
   600                                 
   601                                 
   602 00000362 4889D8                  mov rax, rbx
   603 00000365 48C7C200000000          mov rdx, 0
   604 0000036C 49F7F4                  div r12
   605 0000036F 4883FA00                cmp rdx, 0
   606 00000373 751B                    jne notDivisible
   607                                 
   608                                 primeDigitsLoop:
   609 00000375 4C89E7                  mov rdi, r12
   610 00000378 E897FFFFFF              call findSumOfDigits
   611 0000037D 4901C5                  add r13, rax
   612                                 
   613                                 
   614 00000380 4889D8                  mov rax, rbx
   615 00000383 48C7C200000000          mov rdx, 0
   616 0000038A 49F7F4                  div r12
   617 0000038D 4889C3                  mov rbx, rax
   618 00000390 EB0F                    jmp primeIfDone
   619                                 
   620                                 notDivisible:
   621                                 
   622 00000392 49FFC4                  inc r12
   623 00000395 4C89E7                  mov rdi, r12
   624 00000398 E831FFFFFF              call isPrime
   625 0000039D 4883F801                cmp rax, TRUE
   626 000003A1 75ED                    jne notDivisible
   627                                 
   628                                 primeIfDone:
   629 000003A3 EBB5                    jmp primeFactorsLoop
   630                                 
   631                                 primeFactorsDone:
   632 000003A5 4C89E8                  mov rax, r13
   633                                 
   634 000003A8 415D                    pop r13
   635 000003AA 415C                    pop r12
   636 000003AC 5B                      pop rbx
   637 000003AD C3                      ret
   638                                 
   639                                 
   640                                 
   641                                 
   642                                 
   643                                 
   644                                 
   645                                 [global spinLock1]
   646                                 spinLock:
   647 000003AE 48C7C001000000          mov rax, 1
   648                                 
   649 000003B5 F048870425[00000000]     lock xchg rax, qword [myLock]
   650                                 
   651                                 
   652                                 
   653                                 
   654 000003BE 4885C0                  test rax, rax
   655                                 
   656                                 
   657                                 
   658                                 
   659                                 
   660 000003C1 75E9                    jnz spinLock
   661                                 
   662                                 
   663 000003C3 C3                      ret
   664                                 
   665                                 
   666                                 
   667                                 
   668                                 
   669                                 [global spinUnlock]
   670                                 spinUnlock:
   671 000003C4 48C7C000000000          mov rax, 0
   672                                 
   673 000003CB 48870425[00000000]      xchg rax, qword [myLock]
   674                                 
   675 000003D3 C3                      ret
   676                                 
   677                                 
   678                                 
   679                                 
   680                                 
   681                                 
   682                                 
   683                                 
   684                                 
   685                                 
   686                                 
   687                                 
   688                                 
   689                                 [global printString]
   690                                 printString:
   691                                 
   692                                 
   693                                 
   694                                 
   695 000003D4 48C7C200000000          mov rdx, 0
   696                                 strCountLoop:
   697 000003DB 803C1700                cmp byte [rdi+rdx], NULL
   698 000003DF 7403                    je strCountLoopDone
   699 000003E1 48FFC2                  inc rdx
   700 000003E4 EBF3                    jmp strCountLoop
   701                                 strCountLoopDone:
   702 000003E6 4883FA00                cmp rdx, 0
   703 000003EA 7411                    je printStringDone
   704                                 
   705                                 
   706                                 
   707                                 
   708 000003EC 48C7C001000000          mov rax, SYS_write
   709 000003F3 4889FE                  mov rsi, rdi
   710 000003F6 48C7C701000000          mov rdi, STDOUT
   711                                 
   712 000003FD 0F05                    syscall
   713                                 
   714                                 
   715                                 
   716                                 
   717                                 printStringDone:
   718 000003FF C3                      ret
   719                                 
   720                                 
   721                                 
